#! /bin/usr/python

import logging
logging.getLogger("scapy.runtime").setLevel(logging.ERROR)

from scapy.all import *
import sys
from HTTP import *
#import the library scapi for



#import classes HTTPrequest and HTTPresponse used for easily extract version indicators in each packets
if len(sys.argv) != 2:
        print "not enough arguments, pcap filename required, test.pcap used"
        test=rdpcap("test.pcap")
else:
	test=rdpcap(sys.argv[1])


ip=[]
#this table will contains the version indicator of each packet with this format:
#src_ip|version_indicator_found

for p in test.filter(lambda(s): HTTPrequest in s or HTTPresponse in s):
#for each packet what contains a HTTPrequest or HTTPreponse headers
	if p[4].name == "HTTP Request" :
	#if the current packet contains a HTTP request header
		if p[1].src +'|'+p.UserAgent[:-1] not in ip :
		#if the current version indicator aren't already found
			ip.append( p[1].src +'|'+p.UserAgent[:-1])
	elif p[4].name == "HTTP Response" : 
		if p.Server is None:
			if p[1].src+ '|' not in ip :
				ip.append( p[1].src+ '|')
		else :
			if p[1].src+'|'+p.Server[:-1] not in ip :
				ip.append(p[1].src+'|'+p.Server[:-1])

for case in ip:
#return each version inficator found
	print case
